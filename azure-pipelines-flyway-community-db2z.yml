#
# Copyright (C) Red Gate Software Ltd 2010-2022
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Flyway pipeline db2Z community edition

trigger:
- feature/db2z

jobs:
- deployment:
  displayName: 'Building the flyway runtime'
  environment: 'flyway-develop'
  pool:
    name: ruttm03
  strategy:
    runOnce:
      deploy:   
        steps:
        # Below we use fixed paths on agent. Have to do this dynamically using custom task etc. For now, o.k.
        - checkout: self
          clean: true
        - task: Bash@3
          displayName: 'set env BUILD_JDK to $JAVA_HOME'
          inputs:
            targetType: 'inline'
            script: 'echo "##vso[task.setvariable variable=BUILD_JDK]$JAVA_HOME"'
        - task: Bash@3
          displayName: 'Print environment variables'
          inputs:
            targetType: 'inline'
            script: printenv | sort
        - task: Maven@3
          displayName: 'Maven clean package'
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m'
            options: '-P nexus-deploy -pl !flyway-gradle-plugin -s $(Build.Repository.LocalPath)/settings.xml'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            goals: 'clean package'
            # publishJUnitResults: false
            # javaHomeOption: 'JDKVersion'
            jdkVersionOption: '11'
            jdkArchitectureOption: 'openjdk'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
        # - task: Maven@3
        #   inputs:
        #     mavenPomFile: 'pom.xml'
        #     options: '-s $(Build.Repository.LocalPath)/settings.xml'
        #     goals: 'flyway:info'
        #     jdkVersionOption: '11'
        #     jdkArchitectureOption: 'openjdk'
        #     mavenVersionOption: 'Default'
        #     mavenAuthenticateFeed: false
        #     effectivePomSkip: false

        - task: Bash@3
          displayName: 'Remove previous Flyway jars from runtime'
          inputs:
            targetType: inline
            script: 'rm -f $FLYWAY_RUNTIME_LIB/*jar'

        - task: Bash@3
          displayName: 'Copy Flyway jars from target to runtime'
          inputs:
            targetType: inline
            script: 'cp $(Build.Repository.LocalPath)/*/target/*.jar $FLYWAY_RUNTIME_LIB'
        - task: Bash@3
          displayName: 'Do a Flyway test with the new jars: # 1: The cleanup'
          inputs:
            targetType: inline
            script: 'flyway clean -configFiles=$FLYWAY_CONF || exit 1'
        - task: Bash@3
          displayName: 'Do a Flyway test with the new jars: # 2: The migration'
          inputs:
            targetType: inline
            script: 'flyway migrate -locations="filesystem:$(Build.Repository.LocalPath)/test_data" -configFiles=$FLYWAY_CONF -createSchemas="false" || exit 1'
        - task: Bash@3
          displayName: 'And finally clean up the mess you made'
          inputs:
            targetType: inline
            script: 'flyway clean -configFiles=$FLYWAY_CONF || exit 1'
        # - task: SonarQubePrepare@4
        #   displayName: 'configure SonarQube'
        #   inputs:
        #     SonarQube: 'SonarQube ONT'
        #     scannerMode: 'Other'
        # - task: Maven@3
        #   displayName: 'Run SonarQube analysis'
        #   inputs:
        #     mavenPomFile: 'pom.xml'
        #     goals: 'sonar:sonar'
        #     options: '-s $(settingsFile.secureFilePath) -DskipTests -Psonarqube'
        #     publishJUnitResults: false
        #     javaHomeOption: 'JDKVersion'
        #     jdkVersionOption: '1.11'
        #     mavenVersionOption: 'Default'
        #     mavenAuthenticateFeed: false
        #     effectivePomSkip: false
        # - task: SonarQubePublish@4
        #   displayName: 'Publish SonarQube QualityGate result'
        #   inputs:
        #     pollingTimeoutSec: '300'
        - task: Maven@3
          displayName: 'Upload release-candidates to Nexus'
          # condition: or(variables.isDevelop, variables.isHotfixBranch, variables.isReleaseBranch)
          inputs:
            mavenPomFile: 'pom.xml'
            goals: 'clean deploy'
            # Skip upload for now because everytime same version
            options: '-DskipTests -P nexus-deploy -DupdateReleaseInfo=true -pl !flyway-gradle-plugin -Dmaven.deploy.skip=true -Dnexus.user=$(nexus.user) -Dnexus.password=$(nexus.password) -s $(Build.Repository.LocalPath)/settings.xml'
            # options: '-DskipTests -P nexus-deploy -DupdateReleaseInfo=true -pl !flyway-gradle-plugin -Dnexus.user=$(nexus.user) -Dnexus.password=$(nexus.password) -s $(Build.Repository.LocalPath)/settings.xml'
            publishJUnitResults: false
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.11'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
